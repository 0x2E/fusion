I believe that Issue #97(0x2E/fusion:main) is caused by the content not being html entities decoded
before being rendered. Below is an example of what I believe to be the cause of issue #97(0x2E/fusion:main) taken from
frontend/src/routes/(authed)/items/[id]/+page.svelte:

<div class="flex w-full md:w-[80%] md:shrink-0">
	<h2 class={`line-clamp-2 w-full truncate font-medium md:line-clamp-1 ${highlightUnread && !item.unread ? 'text-base-content/60' : ''}`}>

        {item.title || item.link}

    </h2>
</div>

Above you can see that the title is being directly using feed.name the issue with this is that if feed.name contains
html entities that are encoded the entities will not be decoded before being rendered this is done on purpose to prevent
things such as XXS attacks.

Every occurrence of the issue shares the same root problem .name or .link are be used causing the issues mentioned above to
occur.

In order to fix the issue the content must first safely have any html entities decoded then be rendered as normal.


By using DOMPurify and a helper function I was able to solve the issue by first sanitising the text to help prevent
against XXS attacks then used a helper function to allow the sanitised text to be rendered by svelte. Below is the helper
function and an example of how it's used to fix issue #97.


import DOMPurify from "dompurify"; // Block added by BirdsAreFlyingCameras to fix issue #97(0x2E/fusion:main)
function decodeHtml(html: string): string {
	const txt = document.createElement("textarea");
	txt.innerHTML = html;
	return txt.value;
}

<div class="flex w-full md:w-[80%] md:shrink-0">
	<h2 class={`line-clamp-2 w-full truncate font-medium md:line-clamp-1 ${highlightUnread && !item.unread ? 'text-base-content/60' : ''}`}>

        {decodeHtml(DOMPurify.sanitize(item.title)) || decodeHtml(DOMPurify.sanitize(item.link))}

    </h2>
</div>